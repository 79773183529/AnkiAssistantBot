number;topic_number;heading;question;answer_text;answer_code
1;3;Дата и время;Какие аргументы и в каком порядке принимает  экземпляр класса date ?;Конструктор типа date сначала принимает год, затем месяц, а уже потом число. Мы также можем использовать именованные аргументы, нарушая указанный порядок date(day=6, month=10, year=1992);from datetime import date \n\nmy_date = date(1992, 10, 6)
2;3;Дата и время;Какой метод используется для получения текущей даты ?;Что бы  получить информацию о текущей дате на компьютере, на котором выполняется программа используется встроенный метод today();from datetime import date \n\ncreation_date = date.today()
3;3;Дата и время;Какие аргументы и в каком порядке принимает экземпляр класса time ?;Конструктор типа time сначала принимает часы, затем минуты, секунды, а уже потом микросекунды. Мы можем использовать именованные аргументы (hour, minute, second, microsecond). Hеобязательно указывать все его атрибуты в конструкторе. Недостающие данные о времени автоматически заполняются нулями.;from datetime import time   \n\ntime1 = time(11, 20, 54, 1234) \n\ntime3 = time(11, 20)  \ntime5 = time() \n\ntime6 = time(minute=23, second=56)
4;3;Дата и время;Какие аргументы и в каком порядке принимает экземпляр класса  datatime ?;При создании новой даты-времени (тип datetime) нужно указать год, месяц, день, часы, минуты, секунды и микросекунды. При этом год, месяц и день являются обязательными, а часы, минуты, секунды и микросекунды необязательными.;from datetime import datetime \n\nmy_datetime = datetime(1992, 10, 6, 9, 40, 23, 51204) \n\nonly_date = datetime(2021, 12, 31)
5;3;Дата и время;Как сформировать новый объект типа datetime из двух разных объектов, представляющих дату и время (date и time);Для этого используется метод combine();from datetime import date, time, \n\ndatetime my_date = date(1992, 10, 6) \n\nmy_time = time(10, 45, 17) \n\nmy_datetime = datetime.combine(my_date, my_time)
6;3;Дата и время;Как получить текущее время на момент исполнения программы,  для локального и UTC времени соответственно.;Для этого используются методы now() или  today() и utcnow();from datetime import datetime \n\ndatetime_now = datetime.now() \ndatetime_today = datetime.today()\ndatetime_utcnow = datetime.utcnow()
7;3;Дата и время;Как преобразовать  дату-время в строку нужного формата;Чтобы преобразовать дату или время или дату-время в строку нужного формата, следует воспользоваться методом strftime(), указав ему в качестве аргумента параметры форматирования.;from datetime import datetime \n\nmy_datetime = datetime(2021, 8, 10, 18, 20, 34) \n\nprint(my_datetime.strftime('%d.%m.%y --- %H::%M::%S'))
8;3;Дата и время;Как преобразовать  строку произвольного  формата в экземпляр класса datatime;Используется метод strptime(), который преобразует строку (первый аргумент) в объект datetime согласно переданному формату (второй аргумент).;from datetime import datetime \n\ndatetime_str = input('Введите дату/время в формате ДД.ММ.ГГГГ ЧЧ:ММ:СС') \n\nmy_datetime = datetime.strptime(datetime_str, '%d.%m.%Y %H:%M:%S')
9;3;Дата и время;Сокращенное название дня недели;%a;
10;3;Дата и время;Полное название дня недели;%A;
11;3;Дата и время;Номер дня недели [0, …, 6];%w;
12;3;Дата и время;День месяца [01, …, 31];%d;
13;3;Дата и время;Номер месяца [01, …,12];%m;
14;3;Дата и время;Год без века [00, …, 99];%y;
15;3;Дата и время;Год с веком;%Y;
16;3;Дата и время;Час (24-часовой формат) [00, …, 23];%H;
17;3;Дата и время;Число минут [00, …, 59];%M;
18;3;Дата и время;Число секунд [00, …, 59];%S;
19;3;Дата и время;Какие аргументы  принимает экземпляр класса timedelta ?;недели (weeks), дни (days), часы (hours), минуты (minutes), секунды (seconds), микросекунды (microseconds), миллисекунды (milliseconds);from datetime import timedelta \n\ndelta = timedelta(days=7, hours=20, minutes=7, seconds=17) 
20;3;Дата и время; Как выполнить  задержку в выполнении программы ?;Функция sleep() используется для добавления задержки в выполнении программы. Эта функция принимает в качестве аргумента количество секунд (secs) и добавляет задержку в выполнении программы на указанное количество секунд.;import time  \n\nprint('Before the sleep statement') \ntime.sleep(3) \nprint('After the sleep statement')
21;3;Дата и время;Какие две функции стоит использовать при измерении времени выполнения программы?;perf_counter() и  monotonic();import time \n\nstart_time = time.perf_counter() \n\nfor i in range(5):  \n    sprint(i) \n    time.sleep(1) \n\nend_time = time.perf_counter() \n\nelapsed_time = end_time - start_time \n\nprint(f'Время работы программы = {elapsed_time}')
